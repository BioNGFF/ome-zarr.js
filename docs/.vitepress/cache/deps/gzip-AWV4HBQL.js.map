{
  "version": 3,
  "sources": ["../../../../node_modules/numcodecs/dist/gzip.js"],
  "sourcesContent": ["import \"./chunk-INHXZS53.js\";\n\n// src/gzip.ts\nimport * as fflate from \"fflate\";\nvar GZip = class GZip2 {\n  static codecId = \"gzip\";\n  level;\n  constructor(level = 1) {\n    if (level < 0 || level > 9) {\n      throw new Error(\"Invalid gzip compression level, it should be between 0 and 9\");\n    }\n    this.level = level;\n  }\n  static fromConfig({ level }) {\n    return new GZip2(level);\n  }\n  encode(data) {\n    return fflate.gzipSync(data, { level: this.level });\n  }\n  decode(data) {\n    return fflate.gunzipSync(data);\n  }\n};\nvar gzip_default = GZip;\nexport {\n  gzip_default as default\n};\n"],
  "mappings": ";;;;;;;;;;AAAA;AAIA,IAAI,QAAO,WAAY;AAAA,EAGrB,YAAY,QAAQ,GAAG;AADvB;AAEE,QAAI,QAAQ,KAAK,QAAQ,GAAG;AAC1B,YAAM,IAAI,MAAM,8DAA8D;AAAA,IAChF;AACA,SAAK,QAAQ;AAAA,EACf;AAAA,EACA,OAAO,WAAW,EAAE,MAAM,GAAG;AAC3B,WAAO,IAAI,GAAM,KAAK;AAAA,EACxB;AAAA,EACA,OAAO,MAAM;AACX,WAAc,SAAS,MAAM,EAAE,OAAO,KAAK,MAAM,CAAC;AAAA,EACpD;AAAA,EACA,OAAO,MAAM;AACX,WAAc,WAAW,IAAI;AAAA,EAC/B;AACF,GAjBE,cADS,IACF,WAAU,SADR;AAmBX,IAAI,eAAe;",
  "names": []
}
